<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/Deni/Desktop/ZAVRSNI/zavrsni-back/mydb.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="8222"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,18:mainrestaurant_gallery"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="pending" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="126"/><column index="3" value="74"/><column index="4" value="80"/><column index="5" value="93"/><column index="6" value="52"/><column index="7" value="66"/><column index="8" value="52"/><column index="9" value="57"/><column index="10" value="251"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="pending_users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths/><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="reservations_users" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="92"/><column index="3" value="88"/><column index="4" value="168"/><column index="5" value="157"/><column index="6" value="79"/><column index="7" value="52"/><column index="8" value="300"/><column index="9" value="300"/><column index="10" value="75"/><column index="11" value="134"/><column index="12" value="126"/><column index="13" value="74"/><column index="14" value="80"/><column index="15" value="93"/><column index="16" value="52"/><column index="17" value="66"/><column index="18" value="52"/><column index="19" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="restaurant_gallery" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="126"/><column index="3" value="401"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="restaurant_rating" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="4" mode="0"/></sort><column_widths><column index="1" value="52"/><column index="2" value="126"/><column index="3" value="74"/><column index="4" value="52"/><column index="5" value="161"/><column index="6" value="300"/><column index="7" value="209"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">/*	
CREATE VIEW reservations_users AS
	SELECT user.*, reservations.id as reservation_id, reservations.restaurant_id, reservations.user_id, reservations.table_id, reservations.termin_id
		FROM  user
		INNER JOIN reservations ON user.id = reservations.user_id
		
	

DROP VIEW reservations_users

SELECT *
	FROM reservations_users
*/
/**/
SELECT user.email as restaurant_email, reservations_users.reservation_id as reservation_id, reservations_users.user_id, reservations_users.email, reservations_users.table_id, reservations_users.termin_id, termin.start_time, termin.end_time
	FROM user
	LEFT JOIN reservations_users ON user.id = reservations_users.restaurant_id
	LEFT JOIN termin ON reservations_users.termin_id = termin.id
	WHERE reservations_users.restaurant_id = 1</sql><sql name="SQL 1">DROP TABLE user
DROP TABLE termin
DROP TABLE tables
DROP TABLE reservations
DROP TABLE pending
DROP TABLE restaurant_rating
DROP TABLE restaurant_info
DROP TABLE verify
DROP VIEW rates
DROP VIEW reservations_users
DROP VIEW pending_users





/*SELECT user.id, user.firstname, user.lastname,user.email, user.restaurant_name, tables.id as table_id, tables.restaurant_id, tables.table_name,tables.table_size, 
		reservations.id as reservation_id, reservations.restaurant_id, reservations.table_id, reservations.user_id, reservations.termin_id, 
		termin.id as termin_id, termin.restaurant_id, termin.start_time, termin.end_time
	FROM user
	LEFT JOIN tables ON user.id = tables.restaurant_id
	INNER JOIN termin ON user.id = termin.restaurant_id
	LEFT JOIN reservations ON termin.id = reservations.termin_id
	WHERE user.id = 1
	*/
	
--INSERT INTO reservations (restaurant_id, user_id, table_id, termin_id) VALUES (1, 2, 12, 11);

/**/

/*SELECT user.id, user.email, user.restaurant_name, tables.id as table_id, tables.restaurant_id, tables.table_name,tables.table_size, 
		reservations.id as reservation_id, reservations.restaurant_id, reservations.table_id, reservations.user_id, reservations.termin_id, 
		termin.id as termin_id, termin.restaurant_id, termin.start_time, termin.end_time
	FROM user
	LEFT JOIN tables ON user.id = tables.restaurant_id
	LEFT JOIN reservations ON tables.id = reservations.table_id
	LEFT JOIN termin ON reservations.termin_id = termin.id
	WHERE user.id = 1
	ORDER BY tables.table_size ASC*/        --AND reservations.id IS NULL
	
	
	
/* --GET ALL RESERVATIONS FROM ONE RESTAURANT
SELECT user.email, reservations.id as reservation_id, reservations.user_id, reservations.table_id, reservations.termin_id, termin.start_time, termin.end_time
	FROM user
	LEFT JOIN reservations ON user.id = reservations.restaurant_id
	LEFT JOIN termin ON reservations.termin_id = termin.id
	WHERE reservations.restaurant_id = 1*/


/* --GROUP ALL TABLES
	SELECT tables.table_size
	FROM tables
    WHERE tables.restaurant_id = 1
    GROUP by tables.table_size*/
	
	
 -- GET ALL TABLES TERMINS AND RESERVATIONS FROM ONE RESTAURANT 
/*
 SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
		termin.id as termin_id, termin.start_time, termin.end_time,
		reservations.id as reservation_id, reservations.user_id,
		user.email, user.restaurant_name
	FROM tables
    LEFT JOIN termin ON tables.restaurant_id = termin.restaurant_id
    LEFT JOIN reservations ON termin.id = reservations.termin_id AND tables.id = reservations.table_id
	LEFT JOIN user ON tables.restaurant_id = user.id
    WHERE tables.restaurant_id = 1
    ORDER BY tables.table_size ASC
	*/
	
-- GET ALL RESTAURANTS AND USERS COMBINED RESERVATIONS

--VIEW OF USER AND RESTAURANT RESERVATION
/*
CREATE VIEW reservations_users AS
	SELECT user.*, reservations.id as reservation_id, reservations.restaurant_id, reservations.user_id, reservations.table_id, reservations.termin_id, reservations.day, reservations.month, reservations.year
		FROM  user
		INNER JOIN reservations ON user.id = reservations.user_id

DROP VIEW reservations_users*/
/*	SELECT *
	FROM reservations_users
*/
CREATE VIEW pending_users AS
	SELECT u.id, u.firstname, u.lastname, u.email, u.role, u.image, pending.id as pending_id, pending.restaurant_id, pending.user_id, pending.table_id, pending.termin_id, pending.day, pending.month, pending.year, pending.name, pending.date_time
		FROM  user u
		INNER JOIN pending ON u.id = pending.user_id


/*
SELECT user.email as restaurant_email, reservations_users.reservation_id as reservation_id, reservations_users.user_id, reservations_users.email, reservations_users.firstname, reservations_users.lastname, reservations_users.table_id, reservations_users.termin_id, termin.start_time, termin.end_time
	FROM user
	LEFT JOIN reservations_users ON user.id = reservations_users.restaurant_id
	LEFT JOIN termin ON reservations_users.termin_id = termin.id
	WHERE reservations_users.restaurant_id = 1
	
	
SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        reservations.id as reservation_id, reservations.user_id, reservations.day, reservations.month, reservations.year,
        user.email, user.restaurant_name
      FROM tables
        LEFT JOIN termin ON tables.restaurant_id = termin.restaurant_id
        LEFT JOIN reservations ON termin.id = reservations.termin_id AND tables.id = reservations.table_id
      LEFT JOIN user ON tables.restaurant_id = user.id
        WHERE tables.restaurant_id = 1 
        ORDER BY tables.table_size ASC
*/		
		
/*

		
SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
	termin.id as termin_id, termin.start_time, termin.end_time,
	user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
	FROM termin
		LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
		LEFT JOIN user ON tables.restaurant_id = user.id
		WHERE tables.restaurant_id = 1
		
EXCEPT

SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
      FROM termin
        LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
		LEFT JOIN user ON tables.restaurant_id = user.id
        WHERE tables.restaurant_id = 1 AND reservations.day = 3
		ORDER BY tables.table_size
*/


SELECT user.restaurant_name, user.email, restaurant_rating.*, (COUNT(restaurant_rating.rate)) as rate
	FROM user
	LEFT JOIN restaurant_rating ON user.id = restaurant_rating.restaurant_id
	WHERE user.role = 'admin'
	
	
	
	SELECT user.restaurant_name, user.email, restaurant_rating.*, ((SUM(restaurant_rating.rate))/(COUNT(restaurant_rating.rate))) as rate
        FROM user
        LEFT JOIN restaurant_rating ON user.id = restaurant_rating.restaurant_id
        WHERE user.role = 'admin' AND restaurant_rating.restaurant_id = 1 
	

	SELECT * 
		FROM restaurant_rating rr
		LEFT JOIN user u ON rr.restaurant_id = u.id
		WHERE rr.restaurant_id = ? AND rr.user_id = ?



		
		
        SELECT user.id as restaurant_id, user.firstname, user.lastname, user.email, user.restaurant_name, user.location, user.role,
                ROUND(AVG(restaurant_rating.rate), 2) as avg_rating
          FROM user
          LEFT JOIN restaurant_rating ON user.id = restaurant_rating.restaurant_id
          WHERE user.role = 'admin'
          GROUP BY user.restaurant_name 



SELECT *
	FROM user u
	
	WHERE u.role = 'admin'



SELECT user.image
	FROM user
	WHERE user.id = 1
	
	
CREATE VIEW rates AS
	SELECT u.id, u.firstname, u.lastname, u.email, u.restaurant_name, u.role, rr.id as r_id, rr.restaurant_id, rr.user_id, rr.rate
		FROM user u
		LEFT JOIN restaurant_rating rr ON u.id = rr.restaurant_id
		WHERE u.role = 'admin'



SELECT ru.id as user_id, ru.firstname, ru.lastname, ru.email, ru.reservation_id, ru.restaurant_id, ru.table_id, ru.termin_id, 
		ta.table_name, ta.table_size, te.start_time, te.end_time
	FROM reservations_users ru
	LEFT JOIN tables ta ON ru.table_id = ta.id
	LEFT JOIN termin te ON ru.termin_id = te.id
	WHERE ru.restaurant_id = 2

	
	
	SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        user.email, user.restaurant_name, pending.id as reservation_id, pending.day
        FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          INNER JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2
          
      UNION
      
      SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
            FROM termin
              LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          INNER JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
              WHERE tables.restaurant_id = 2 AND reservations.day = 12
              ORDER BY tables.table_size
			  
			  
			  


SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        user.email, user.restaurant_name, pending.id as reservation_id, pending.day
        FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2
		  
UNION

SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
        FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2
          
 EXCEPT
      
      SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
            FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2 AND reservations.day = 12

UNION
			  
		SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, pending.id as reservation_id, pending.day
            FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2 AND pending.day = 12
          ORDER BY tables.table_size
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
		  
SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        user.email, user.restaurant_name, pending.id as reservation_id, pending.day
        FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2 AND (pending.day IS NULL OR pending.day = 13)
          
      EXCEPT
      
	  SELECT * FROM (      SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, pending.id as reservation_id, pending.day
		  FROM termin
		  LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		  LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
		  LEFT JOIN user ON tables.restaurant_id = user.id
		  WHERE tables.restaurant_id = 2 AND pending.day = 14
              
			  
UNION			  
			  
			  
	SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
		FROM termin
		LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
		LEFT JOIN user ON tables.restaurant_id = user.id
        WHERE tables.restaurant_id = 2 AND reservations.day = 14
        ORDER BY tables.table_size)
	  
	  
	  
	  
	  
	  
	  

DROP VIEW reservations_pending
--CREATE VIEW reservations_pending AS
      SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, pending.id as reservation_id, pending.day
		  FROM termin
		  LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		  LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
		  LEFT JOIN user ON tables.restaurant_id = user.id
		  WHERE tables.restaurant_id = 2 AND pending.day = 13
              
			  
UNION			  
			  
			  
	SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
		FROM termin
		LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
		LEFT JOIN user ON tables.restaurant_id = user.id
        WHERE tables.restaurant_id = 2 AND reservations.day = 13
        ORDER BY tables.table_size
		
		
		
		
		
		
		
		
		
SELECT * FROM (SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
        termin.id as termin_id, termin.start_time, termin.end_time,
        user.email, user.restaurant_name
        FROM termin
          LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
          LEFT JOIN user ON tables.restaurant_id = user.id
          WHERE tables.restaurant_id = 2
		  
EXCEPT

SELECT * FROM (      SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name
		  FROM termin
		  LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		  LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
		  LEFT JOIN user ON tables.restaurant_id = user.id
		  WHERE tables.restaurant_id = 2 AND pending.day = 8
              
			  
UNION			  
			  
			  
	SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name
		FROM termin
		LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
		LEFT JOIN user ON tables.restaurant_id = user.id
        WHERE tables.restaurant_id = 2 AND reservations.day = 8
        ORDER BY tables.table_size))

		
		
		
		
		
SELECT * FROM user WHERE user.email = &quot;ana@gmail.com&quot;

UPDATE user SET verified = 1 WHERE user.email = &quot;ana@gmail.com&quot;



SELECT rr.id, rr.restaurant_id, rr.user_id, rr.rate, rr.review, ri.id as review_img_id, ri.image, u.firstname, u.lastname, u.email, u.image
	FROM restaurant_rating rr
	LEFT JOIN review_images ri ON rr.id = ri.rate_id
	LEFT JOIN user u ON rr.user_id = u.id
	WHERE rr.restaurant_id = 26
	

		
SELECT u.id as user_id, u.firstname, u.lastname, u.email, rr.restaurant_id, rr. rate
	FROM user u
	LEFT JOIN restaurant_rating rr ON u.id = rr.user_id
	WHERE u.id = 24 AND rr.restaurant_id = 26

SELECT rr.images
	FROM restaurant_rating rr
	WHERE rr.restaurant_id = 26
	
	
	
	
	
SELECT rr.id, rr.restaurant_id, rr.user_id, rr.rate, rr.review, ri.id as review_img_id, ri.image as review_image, u.firstname, u.lastname, u.email, u.image
      FROM restaurant_rating rr
      LEFT JOIN review_images ri ON rr.id = ri.rate_id
      LEFT JOIN user u ON rr.user_id = u.id
      WHERE rr.restaurant_id = 26
	  ORDER BY rr.id DESC

	  
	  
	  
	  
	  
	  
	  
SELECT * 
	FROM restaurant_gallery rg
	WHERE rg.restaurant_id = 26</sql><sql name="CREATE TABLES">
    CREATE TABLE IF NOT EXISTS user (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      firstname TEXT NOT NULL,
      lastname TEXT NOT NULL,
      email TEXT NOT NULL UNIQUE,
      restaurant_name TEXT,
      location TEXT,
      role TEXT NOT NULL,
      password TEXT NOT NULL,
      image TEXT NOT NULL DEFAULT &quot;https://static.vecteezy.com/system/resources/thumbnails/009/292/244/small/default-avatar-icon-of-social-media-user-vector.jpg&quot;,
	verified INTEGER NOT NULL DEFAULT 0
  )

    CREATE TABLE IF NOT EXISTS tables (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      restaurant_id INTEGER NOT NULL,
      table_name TEXT NOT NULL,
      table_size INTEGER NOT NULL,
      FOREIGN KEY (restaurant_id) REFERENCES user(id)
    )

    CREATE TABLE IF NOT EXISTS termin (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      restaurant_id INTEGER NOT NULL,
      start_time TEXT NOT NULL,
      end_time TEXT NOT NULL,
      FOREIGN KEY (restaurant_id) REFERENCES user(id)
    )

    CREATE TABLE IF NOT EXISTS reservations (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      restaurant_id INTEGER NOT NULL,
      user_id INTEGER NOT NULL,
      table_id INTEGER NOT NULL,
      termin_id INTEGER NOT NULL,
      day INTEGER NOT NULL,
      month INTEGER NOT NULL,
      year INTEGER NOT NULL,
	  name TEXT NOT NULL,
      FOREIGN KEY (restaurant_id) REFERENCES user(id),
      FOREIGN KEY (user_id) REFERENCES user(id),
      FOREIGN KEY (table_id) REFERENCES tables(id),
      FOREIGN KEY (termin_id) REFERENCES termin(id)
    )
	
 

    CREATE TABLE IF NOT EXISTS pending (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      restaurant_id INTEGER NOT NULL,
      user_id INTEGER NOT NULL,
      table_id INTEGER NOT NULL,
      termin_id INTEGER NOT NULL,
      day INTEGER NOT NULL,
      month INTEGER NOT NULL,
      year INTEGER NOT NULL,
	  name TEXT NOT NULL,
	  date_time TEXT NOT NULL,
      FOREIGN KEY (restaurant_id) REFERENCES user(id),
      FOREIGN KEY (user_id) REFERENCES user(id),
      FOREIGN KEY (table_id) REFERENCES tables(id),
      FOREIGN KEY (termin_id) REFERENCES termin(id)
    )



   CREATE TABLE IF NOT EXISTS restaurant_info (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      restaurant_id INTEGER NOT NULL,
      description TEXT NOT NULL DEFAULT &quot;Pick this restaurant and dine with us !&quot;,
      FOREIGN KEY (restaurant_id) REFERENCES user(id)
    )


    CREATE TABLE IF NOT EXISTS verify (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      email TEXT NOT NULL,
      code TEXT NOT NULL,
      FOREIGN KEY (email) REFERENCES user(email)
    )
	
	
	CREATE TABLE IF NOT EXISTS review_images (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      user_id INTEGER NOT NULL,
      rate_id INTEGER NOT NULL
      image TEXT NOT NULL,
      FOREIGN KEY (user_id) REFERENCES user(id),
      FOREIGN KEY (rate_id) REFERENCES restaurant_rating(id)
    )
	
	
	CREATE TABLE IF NOT EXISTS restaurant_gallery (
		id INTEGER PRIMARY KEY AUTOINCREMENT,
		restaurant_id INTEGER NOT NULL,
		image TEXT NOT NULL,
		FOREIGN KEY (restaurant_id) REFERENCES user(id)
	)


</sql><sql name="CREATE VIEWS">CREATE VIEW reservations_users AS
	SELECT user.*, reservations.id as reservation_id, reservations.restaurant_id, reservations.user_id, reservations.table_id, reservations.termin_id, reservations.day, reservations.month, reservations.year, reservations.name AS name
		FROM  user
		INNER JOIN reservations ON user.id = reservations.user_id
		

		
		
CREATE VIEW rates AS
	SELECT u.id, u.firstname, u.lastname, u.email, u.restaurant_name, u.role, rr.id as r_id, rr.restaurant_id, rr.user_id, rr.rate
		FROM user u
		LEFT JOIN restaurant_rating rr ON u.id = rr.restaurant_id
		WHERE u.role = 'admin'
		
		
		
		

CREATE VIEW reservations_pending AS
      SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, pending.id as reservation_id, pending.day
		  FROM termin
		  LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		  LEFT JOIN pending ON tables.id = pending.table_id AND termin.id = pending.termin_id
		  LEFT JOIN user ON tables.restaurant_id = user.id
		  WHERE tables.restaurant_id = 2 AND pending.day = 13
              
			  
UNION			  
			  
			  
	SELECT tables.id as tables_id, tables.restaurant_id, tables.table_name, tables.table_size,
              termin.id as termin_id, termin.start_time, termin.end_time,
              user.email, user.restaurant_name, reservations.id as reservation_id, reservations.day
		FROM termin
		LEFT JOIN tables ON termin.restaurant_id = tables.restaurant_id
		LEFT JOIN reservations ON tables.id = reservations.table_id AND termin.id = reservations.termin_id
		LEFT JOIN user ON tables.restaurant_id = user.id
        WHERE tables.restaurant_id = 2 AND reservations.day = 13
        ORDER BY tables.table_size
		
		
</sql><current_tab id="1"/></tab_sql></sqlb_project>
